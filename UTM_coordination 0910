#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

#define MAX_POINTS 100  // 최대 웨이포인트 개수를 100개로 제한

int n = 0;  // 읽어들인 웨이포인트의 개수를 저장하는 전역 변수

// 파일에서 웨이포인트 데이터를 읽어오는 함수
// X[], Y[], Angle[] 배열에 각각 x 좌표, y 좌표, 각도 데이터를 저장
void read_file(const char* filename, double X[], double Y[], double Angle[])
{
    FILE* file = fopen(filename, "r");  // 파일을 읽기 모드로 염

    if (!file)  // 파일을 열지 못했을 경우 에러 메시지 출력
    {
        printf("File doesn't exist\n");
        return;
    }

    // 파일의 끝까지 각 웨이포인트 데이터를 읽어옴
    while (fscanf(file, "%lf %lf %lf", &X[n], &Y[n], &Angle[n]) != EOF && n < MAX_POINTS)
    {
        n++;  // 한 줄씩 읽을 때마다 웨이포인트 개수 증가
    }

    fclose(file);  // 파일 닫기
}

// 웨이포인트 간의 yaw 각도를 계산하는 함수
// yaw 각도는 두 웨이포인트 간의 방향을 의미함
void calculate_yaw_angles(double x[], double y[], double yaw_angle[])
{
    // 마지막 웨이포인트 이전까지만 계산 (n-1까지)
    for (int i = 0; i < n - 1; i++)
    {
        // 두 웨이포인트 간의 x, y 변화량을 계산
        double dx = x[i + 1] - x[i];
        double dy = y[i + 1] - y[i];

        // atan2 함수로 각도를 계산하고, 라디안 값을 도 단위로 변환
        double angle = atan2(dy, dx) * 180.0 / 3.14159265358979323846;

        // 각도가 음수일 경우 360도를 더해 양수로 변환
        if (angle < 0) angle += 360.0;

        yaw_angle[i] = angle;  // 계산한 yaw 각도를 배열에 저장
    }
}

// 웨이포인트 좌표 및 각도 데이터를 출력하는 함수
void print_waypoints(double X[], double Y[], double Angle[])
{
    for (int i = 0; i < n; i++)
        printf("X[%d] = %lf, Y[%d] = %lf, Angle[%d] = %lf\n", i, X[i], i, Y[i], i, Angle[i]);
}

// 웨이포인트 간 yaw 각도를 출력하는 함수
void print_yaw_angles(double yaw_angle[])
{
    for (int i = 0; i < n - 1; i++)
        printf("Yaw angle between waypoint %d and %d: %.2f degrees\n", i, i + 1, yaw_angle[i]);
}

int main(void)
{
    // 웨이포인트의 x 좌표, y 좌표, 각도를 저장할 배열을 초기화
    double X[MAX_POINTS] = { 0.0 }, Y[MAX_POINTS] = { 0.0 }, Angle[MAX_POINTS] = { 0.0 };
    double yaw_angle[MAX_POINTS] = { 0.0 };  // yaw 각도를 저장할 배열 초기화

    // 파일에서 웨이포인트 데이터를 읽어옴
    read_file("waypoint.txt", X, Y, Angle);

    // 웨이포인트 데이터를 출력
    printf("Waypoint data:\n");
    print_waypoints(X, Y, Angle);

    // 웨이포인트 간의 yaw 각도를 계산하고 출력
    printf("\nYaw angles between waypoints:\n");
    calculate_yaw_angles(X, Y, yaw_angle);
    print_yaw_angles(yaw_angle);

    return 0;
}
