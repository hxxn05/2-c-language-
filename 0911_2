//////////////// ex 1. ////////////////////////
ex 1.
int main()
{
	int num;
	scanf("%d", &num);
	
	return 0;
}

//////////////////// ex 2. ////////////////////////
ex 2. scanf의 잘못된 사용
int main()
{
	unsigned char age;
	scnaf("%d", &age);
	
	return 0;
}
=> 메모리 침범 발생. 심각한 버그

///////////////////// ex 2 해결 ////////////////////////
ex 2. 해결
int main()
{
	int temp;
	scnaf("%d", &temp);
	age = (unsigned *)temp;
	
	return 0;
}

/////////////////////// ex 3. ////////////////////////
ex 3. 나이 입력 소스 코드의 완성
#include <stdio.h>

void main()
{
	int temp = 0;
	while (1)
	{
		printf("나이를 입력 : ");
		scanf_s("%d", &temp);
		rewind(stdin);

		if (temp > 0 && temp < 100)
		{
			printf("나이 입력 성공\n");
			break;
		}
		else
		{
			printf("나이를 0 ~ 100 사이로 입력해주세요\n");
		}
	}
	printf("입력한 나이는 : %d\n", temp);
}

//////////////////////////////////// 표준 입력 함수 예제 코드들 //////////////////////////////


/////////////////////////// ex 6. ///////////////////////////
ex 6. 
#include <stdio.h>

void main()
{
	int input_data;

	input_data = getchar();
	printf("input : %c\n", input_data);
}

///////////////////////// ex 7. ///////////////////////////
ex 7. 위험한 사용
#include <stdio.h>

void main()
{
	int input_data;

	input_data = getchar();
	printf("1st input : %c\n", input_data);
	input_data = getchar();
	printf("2nd input : %c \n", input_data);
}

////////////////////// ex 7 의 해결 방법 //////////////////////
ex 7의 해결 방법
#include <stdio.h>

void main()
{
	int input_data;

	input_data = getchar();
	rewind(stdin);
	printf("1st input : %c\n", input_data);
	input_data = getchar();
	rewind(stdin);
	printf("2nd input : %c \n", input_data);
}

//////////////////////////// ex 8. //////////////////////////
ex 8.
char input[10];
gets(input);
=> 
abcd 엔터 키 입력
=> 
엔터 키가 NULL 문자로 바뀜
=>
'a', 'b', 'c', 'd' 0
이 입력됨 

/////////////////// ex 9. ////////////////////////
ex 9.
char str[10];
char temp[20];
gets(str);
printf("%s \n", str);
=>
gets에 최대 9글자를 입력해야 하는 상황.
=>
01234567890123을 입력 (str[10] 초과)
=>
0123456789까지 str에 저장 됨.
=>
남은 0123은 str 다음 주소지인 temp 시작점에 0123\n 형태로 저장 됨.
=> 
즉, 다음 주소에 침범을 하게 된다!!!!
